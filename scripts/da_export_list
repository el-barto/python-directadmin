#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
A simple script to handle export Directadmin's lists members

This file is part of python-directadmin.

python-directadmin is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

python-directadmin is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with python-directadmin.  If not, see <http://www.gnu.org/licenses/>.

Usage: da_export_list [options] <domain>

Export_list is a simple script for exporting members of Directadmin lists

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -u USERNAME, --user=USERNAME
                        Directadmin admin/reseller username
  -p PASSWORD, --password=PASSWORD
                        Directadmin admin/reseller password
  -H HOSTNAME, --host=HOSTNAME
                        Directadmin hostname (default: localhost)
  -P PORT, --port=PORT  Directadmin port (default: 2222)

Examples:

./da_export_list example.com

"""
import getpass
import os
import sys
from optparse import OptionParser

import directadmin

__author__ = "Andr√©s Gattinoni <andresgattinoni@gmail.com>, Adam Dobrawy <naczelnik@jawnosc.tk>"
__version__ = "$Revision: 1 $"


def main():
    """
    Main function

    Here's where all the magic happens.
    This functions is mostly meant to handle user input
    and call Directadmin's API to handle suspensions
    """

    # Build an option parser
    parser = OptionParser(usage='%prog [options] <domain>',
                          version=__version__,
                          description="Export_list is a simple script "
                                      "for exporting members of "
                                      "Directadmin lists")
    parser.add_option('-u', '--user', dest='user',
                      help='Directadmin admin/reseller username',
                      metavar='USERNAME', default=None)
    parser.add_option('-p', '--password', dest='password',
                      help='Directadmin admin/reseller password',
                      metavar='PASSWORD', default=None)
    parser.add_option('-H', '--host', dest='host',
                      help='Directadmin hostname (default: localhost)',
                      metavar='HOSTNAME', default="localhost")
    parser.add_option('-P', '--port', dest='port',
                      help='Directadmin port (default: 2222)',
                      metavar='PORT', default=2222)

    # Parse options and do some input checking
    (option, args) = parser.parse_args()
    if not args or len(args) > 2:
        parser.error("You need to specify an domain")
        return 1
    print option

    domain = args[0]

    # If we don't have user or password, ask
    # for it interactively
    if not option.user:
        option.user = raw_input("Admin username: ")

    if not option.password:
        option.password = getpass.getpass("Password: ")

    # Get an API instance
    api = directadmin.Api(option.user,
                          option.password,
                          option.host,
                          option.port)

    if not os.path.exists(domain):
        os.makedirs(domain)

    for listname in api.list_email_list(domain).keys():
        print "Export listname {listname}".format(listname=listname)
        members = sum(api.list_email_list_member(domain, listname).values(), [])
        filename = os.path.join(domain, "{}.txt".format(listname))
        open(filename, 'wb').write("\n".join(members))

    return 0


if __name__ == "__main__":
    sys.exit(main())
